{"ast":null,"code":"import _classCallCheck from \"/mnt/data/repositories/github/self-study/React/learning/Redux-Counter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/data/repositories/github/self-study/React/learning/Redux-Counter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/mnt/data/repositories/github/self-study/React/learning/Redux-Counter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/mnt/data/repositories/github/self-study/React/learning/Redux-Counter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/mnt/data/repositories/github/self-study/React/learning/Redux-Counter/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/mnt/data/repositories/github/self-study/React/learning/Redux-Counter/src/containers/Counter/Counter.js\";\nimport React, { Component } from 'react';\nimport CounterControl from '../../components/CounterControl/CounterControl';\nimport CounterOutput from '../../components/CounterOutput/CounterOutput';\nimport * as actionTypes from './actions'; // Redux\n\nimport { connect } from 'react-redux';\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      counter: 0\n    };\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var results = this.props.storedResults.map(function (item, key) {\n        return React.createElement(\"li\", {\n          key: item,\n          onClick: function onClick() {\n            return _this2.props.onDeleteResults(key);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, item);\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(CounterOutput, {\n        value: this.props.compCounter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }), React.createElement(CounterControl, {\n        label: \"Increment\",\n        clicked: this.props.onIncrementCounter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), React.createElement(CounterControl, {\n        label: \"Decrement\",\n        clicked: this.props.onDecrementCounter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), React.createElement(CounterControl, {\n        label: \"Add 5\",\n        clicked: this.props.onAddCounter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), React.createElement(CounterControl, {\n        label: \"Subtract 5\",\n        clicked: this.props.onSubstractCounter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.props.onStoreResults,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Store Result\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, results));\n    }\n  }]);\n\n  return Counter;\n}(Component); // map to store instructions about how the state managed by redux should be mapped to props you\n// can see the container. The state is the state we set up previously in the reducer.\n// It expects the state input and returns a JS object which is a map of prop names and slices of the \n// state stored. It's our way of configuring which kind of information we need.\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    compCounter: state.counterRedux,\n    storedResults: state.results\n  };\n}; // Which kind of actions do I want to dispatch in thise container.\n//  It returns prop names referencing to a function which should eventually get executed to a dispatch\n// an action.\n\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onIncrementCounter: function onIncrementCounter() {\n      return dispatch({\n        type: actionTypes.INCREMENT,\n        payLoad: {\n          value: 1\n        }\n      });\n    },\n    onAddCounter: function onAddCounter() {\n      return dispatch({\n        type: actionTypes.ADD,\n        payLoad: {\n          value: 5\n        }\n      });\n    },\n    onDecrementCounter: function onDecrementCounter() {\n      return dispatch({\n        type: actionTypes.DECREMENT,\n        payLoad: {\n          value: -1\n        }\n      });\n    },\n    onSubstractCounter: function onSubstractCounter() {\n      return dispatch({\n        type: actionTypes.SUBSTRACT,\n        payLoad: {\n          value: -5\n        }\n      });\n    },\n    onStoreResults: function onStoreResults() {\n      return dispatch({\n        type: actionTypes.STORE_RESULT\n      });\n    },\n    onDeleteResults: function onDeleteResults(id) {\n      return dispatch({\n        type: actionTypes.DELETE_RESULT,\n        payLoad: {\n          index: id\n        }\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);","map":{"version":3,"sources":["/mnt/data/repositories/github/self-study/React/learning/Redux-Counter/src/containers/Counter/Counter.js"],"names":["React","Component","CounterControl","CounterOutput","actionTypes","connect","Counter","state","counter","results","props","storedResults","map","item","key","onDeleteResults","compCounter","onIncrementCounter","onDecrementCounter","onAddCounter","onSubstractCounter","onStoreResults","mapStateToProps","counterRedux","mapDispatchToProps","dispatch","type","INCREMENT","payLoad","value","ADD","DECREMENT","SUBSTRACT","STORE_RESULT","id","DELETE_RESULT","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CounterControl from '../../components/CounterControl/CounterControl';\nimport CounterOutput from '../../components/CounterOutput/CounterOutput';\nimport * as actionTypes  from './actions';\n\n// Redux\nimport { connect} from 'react-redux';\n\nclass Counter extends Component {\n    state = {\n        counter: 0\n    }\n\n\n    render () {\n        const results = (\n            this.props.storedResults.map( (item,key) => {\n                return (<li key={item} onClick={ () => this.props.onDeleteResults(key)}>{item}</li>)\n            })                        \n        );\n\n        return (\n            <div>\n                <CounterOutput value={this.props.compCounter} />\n                <CounterControl label=\"Increment\" clicked={ this.props.onIncrementCounter} />\n                <CounterControl label=\"Decrement\" clicked={this.props.onDecrementCounter}  />\n                <CounterControl label=\"Add 5\" clicked={ this.props.onAddCounter}  />\n                <CounterControl label=\"Subtract 5\" clicked={this.props.onSubstractCounter}  />\n                <hr />\n                <button onClick={this.props.onStoreResults}>Store Result</button>\n                <ul>\n                    {results}\n                </ul>\n            </div>\n        );\n    }\n}\n\n// map to store instructions about how the state managed by redux should be mapped to props you\n// can see the container. The state is the state we set up previously in the reducer.\n\n// It expects the state input and returns a JS object which is a map of prop names and slices of the \n// state stored. It's our way of configuring which kind of information we need.\nconst mapStateToProps =  (state) => {\n    return {\n        compCounter: state.counterRedux ,\n        storedResults: state.results\n    };\n}\n\n// Which kind of actions do I want to dispatch in thise container.\n//  It returns prop names referencing to a function which should eventually get executed to a dispatch\n// an action.\nconst mapDispatchToProps =  ( dispatch) => {\n    return {\n        onIncrementCounter: () => dispatch({ type: actionTypes.INCREMENT , payLoad: {\n            value : 1\n        }}) ,\n        onAddCounter: () => dispatch({ type: actionTypes.ADD , payLoad: {\n            value : 5\n        }}) ,\n        onDecrementCounter: () => dispatch({ type: actionTypes.DECREMENT , payLoad: {\n            value : -1\n        }}),\n        onSubstractCounter: () => dispatch({ type: actionTypes.SUBSTRACT , payLoad: {\n            value : -5\n        }}) ,\n        onStoreResults: () => dispatch ({\n            type: actionTypes.STORE_RESULT\n        }) ,\n        onDeleteResults: ( id ) => dispatch ({\n            type: actionTypes.DELETE_RESULT ,\n            payLoad: {\n                index : id\n            }\n        }) \n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter)"]},"metadata":{},"sourceType":"module"}