{"ast":null,"code":"import _objectSpread from \"/mnt/data/repositories/github/self-study/React/learning/Redux-Counter/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as constants from '../actions';\nvar initialState = {\n  counterRedux: 0\n};\n\nvar counterReducer = function counterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(\"Current State\", state);\n  console.log(action.type, action.payLoad);\n\n  switch (action.type) {\n    case constants.INCREMENT:\n    case constants.SUBSTRACT:\n    case constants.DECREMENT:\n    case constants.ADD:\n      return _objectSpread({}, state, {\n        counterRedux: state.counterRedux + action.payLoad.value\n      });\n\n    default:\n      break;\n  }\n\n  return state;\n};\n\nexport default counterReducer;","map":{"version":3,"sources":["/mnt/data/repositories/github/self-study/React/learning/Redux-Counter/src/store/reducers/counter.js"],"names":["constants","initialState","counterRedux","counterReducer","state","action","console","log","type","payLoad","INCREMENT","SUBSTRACT","DECREMENT","ADD","value"],"mappings":";AAAA,OAAO,KAAKA,SAAZ,MAA4B,YAA5B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAG;AADE,CAArB;;AAMA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAmC;AAAA,MAAlCC,KAAkC,uEAA1BH,YAA0B;AAAA,MAAXI,MAAW;AACtDC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,KAA7B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB,EAAyBH,MAAM,CAACI,OAAhC;;AACA,UAAQJ,MAAM,CAACG,IAAf;AACI,SAAKR,SAAS,CAACU,SAAf;AACA,SAAKV,SAAS,CAACW,SAAf;AACA,SAAKX,SAAS,CAACY,SAAf;AACA,SAAKZ,SAAS,CAACa,GAAf;AACI,+BACOT,KADP;AAEIF,QAAAA,YAAY,EAAEE,KAAK,CAACF,YAAN,GAAqBG,MAAM,CAACI,OAAP,CAAeK;AAFtD;;AAIJ;AACI;AAVR;;AAYA,SAAOV,KAAP;AACH,CAhBD;;AAmBA,eAAeD,cAAf","sourcesContent":["import * as constants  from '../actions';\n\nconst initialState = {\n    counterRedux : 0    \n}\n\n\n\nconst counterReducer = (state = initialState , action) => { \n    console.log(\"Current State\", state);\n    console.log(action.type, action.payLoad);\n    switch (action.type) {        \n        case constants.INCREMENT: \n        case constants.SUBSTRACT:\n        case constants.DECREMENT:\n        case constants.ADD:              \n            return {\n                ...state , \n                counterRedux: state.counterRedux + action.payLoad.value\n            }     \n        default:\n            break;\n    }    \n    return state;\n}\n\n\nexport default counterReducer;"]},"metadata":{},"sourceType":"module"}