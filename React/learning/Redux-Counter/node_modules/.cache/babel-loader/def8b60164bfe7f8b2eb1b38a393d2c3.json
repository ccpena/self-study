{"ast":null,"code":"import _classCallCheck from \"/mnt/data/repositories/github/self-study/React/learning/Redux-Counter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/data/repositories/github/self-study/React/learning/Redux-Counter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/mnt/data/repositories/github/self-study/React/learning/Redux-Counter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/mnt/data/repositories/github/self-study/React/learning/Redux-Counter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/mnt/data/repositories/github/self-study/React/learning/Redux-Counter/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/mnt/data/repositories/github/self-study/React/learning/Redux-Counter/src/containers/Counter/Counter.js\";\nimport React, { Component } from 'react';\nimport CounterControl from '../../components/CounterControl/CounterControl';\nimport CounterOutput from '../../components/CounterOutput/CounterOutput'; // Redux\n\nimport { connect } from 'react-redux';\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      counter: 0\n    };\n\n    _this.counterChangedHandler = function (action, value) {\n      switch (action) {\n        case 'inc':\n          _this.setState(function (prevState) {\n            return {\n              counter: prevState.counter + 1\n            };\n          });\n\n          break;\n\n        case 'dec':\n          _this.setState(function (prevState) {\n            return {\n              counter: prevState.counter - 1\n            };\n          });\n\n          break;\n\n        case 'add':\n          _this.setState(function (prevState) {\n            return {\n              counter: prevState.counter + value\n            };\n          });\n\n          break;\n\n        case 'sub':\n          _this.setState(function (prevState) {\n            return {\n              counter: prevState.counter - value\n            };\n          });\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var results = this.props.storedResults.map(function (item) {\n        return React.createElement(\"li\", {\n          key: item,\n          onClick: _this2.props.onDeleteResults(item),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, item);\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(CounterOutput, {\n        value: this.props.compCounter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(CounterControl, {\n        label: \"Increment\",\n        clicked: this.props.onIncrementCounter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(CounterControl, {\n        label: \"Decrement\",\n        clicked: this.props.onDecrementCounter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(CounterControl, {\n        label: \"Add 5\",\n        clicked: this.props.onAddCounter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(CounterControl, {\n        label: \"Subtract 5\",\n        clicked: this.props.onSubstractCounter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.props.onStoreResults,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Store Result\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, results));\n    }\n  }]);\n\n  return Counter;\n}(Component); // map to store instructions about how the state managed by redux should be mapped to props you\n// can see the container. The state is the state we set up previously in the reducer.\n// It expects the state input and returns a JS object which is a map of prop names and slices of the \n// state stored. It's our way of configuring which kind of information we need.\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    compCounter: state.counterRedux,\n    storedResults: state.results\n  };\n}; // Which kind of actions do I want to dispatch in thise container.\n//  It returns prop names referencing to a function which should eventually get executed to a dispatch\n// an action.\n\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onIncrementCounter: function onIncrementCounter() {\n      return dispatch({\n        type: 'INCREMENT',\n        payLoad: {\n          value: 1\n        }\n      });\n    },\n    onAddCounter: function onAddCounter() {\n      return dispatch({\n        type: 'ADD',\n        payLoad: {\n          value: 5\n        }\n      });\n    },\n    onDecrementCounter: function onDecrementCounter() {\n      return dispatch({\n        type: 'DECREMENT',\n        payLoad: {\n          value: -1\n        }\n      });\n    },\n    onSubstractCounter: function onSubstractCounter() {\n      return dispatch({\n        type: 'SUBSTRACT',\n        payLoad: {\n          value: -5\n        }\n      });\n    },\n    onStoreResults: function onStoreResults() {\n      return dispatch({\n        type: 'STORE_RESULT'\n      });\n    },\n    onDeleteResults: function onDeleteResults(index) {\n      return dispatch({\n        type: 'DELETE_RESULT',\n        payLoad: {\n          index: index\n        }\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);","map":{"version":3,"sources":["/mnt/data/repositories/github/self-study/React/learning/Redux-Counter/src/containers/Counter/Counter.js"],"names":["React","Component","CounterControl","CounterOutput","connect","Counter","state","counter","counterChangedHandler","action","value","setState","prevState","results","props","storedResults","map","item","onDeleteResults","compCounter","onIncrementCounter","onDecrementCounter","onAddCounter","onSubstractCounter","onStoreResults","mapStateToProps","counterRedux","mapDispatchToProps","dispatch","type","payLoad","index"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,gDAA3B;AACA,OAAOC,aAAP,MAA0B,8CAA1B,C,CAGA;;AACA,SAASC,OAAT,QAAuB,aAAvB;;IAEMC,O;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,OAAO,EAAE;AADL,K;;UAIRC,qB,GAAwB,UAAEC,MAAF,EAAUC,KAAV,EAAqB;AACzC,cAASD,MAAT;AACI,aAAK,KAAL;AACI,gBAAKE,QAAL,CAAe,UAAEC,SAAF,EAAiB;AAAE,mBAAO;AAAEL,cAAAA,OAAO,EAAEK,SAAS,CAACL,OAAV,GAAoB;AAA/B,aAAP;AAA2C,WAA7E;;AACA;;AACJ,aAAK,KAAL;AACI,gBAAKI,QAAL,CAAe,UAAEC,SAAF,EAAiB;AAAE,mBAAO;AAAEL,cAAAA,OAAO,EAAEK,SAAS,CAACL,OAAV,GAAoB;AAA/B,aAAP;AAA2C,WAA7E;;AACA;;AACJ,aAAK,KAAL;AACI,gBAAKI,QAAL,CAAe,UAAEC,SAAF,EAAiB;AAAE,mBAAO;AAAEL,cAAAA,OAAO,EAAEK,SAAS,CAACL,OAAV,GAAoBG;AAA/B,aAAP;AAA+C,WAAjF;;AACA;;AACJ,aAAK,KAAL;AACI,gBAAKC,QAAL,CAAe,UAAEC,SAAF,EAAiB;AAAE,mBAAO;AAAEL,cAAAA,OAAO,EAAEK,SAAS,CAACL,OAAV,GAAoBG;AAA/B,aAAP;AAA+C,WAAjF;;AACA;;AACA;AACA;AAdR;AAgBH,K;;;;;;;6BAES;AAAA;;AACN,UAAMG,OAAO,GACT,KAAKC,KAAL,CAAWC,aAAX,CAAyBC,GAAzB,CAA8B,UAAAC,IAAI,EAAI;AAClC,eAAQ;AAAI,UAAA,GAAG,EAAEA,IAAT;AAAe,UAAA,OAAO,EAAE,MAAI,CAACH,KAAL,CAAWI,eAAX,CAA2BD,IAA3B,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA2DA,IAA3D,CAAR;AACH,OAFD,CADJ;AAMA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWK,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,cAAD;AAAgB,QAAA,KAAK,EAAC,WAAtB;AAAkC,QAAA,OAAO,EAAG,KAAKL,KAAL,CAAWM,kBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,cAAD;AAAgB,QAAA,KAAK,EAAC,WAAtB;AAAkC,QAAA,OAAO,EAAE,KAAKN,KAAL,CAAWO,kBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAII,oBAAC,cAAD;AAAgB,QAAA,KAAK,EAAC,OAAtB;AAA8B,QAAA,OAAO,EAAG,KAAKP,KAAL,CAAWQ,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKI,oBAAC,cAAD;AAAgB,QAAA,KAAK,EAAC,YAAtB;AAAmC,QAAA,OAAO,EAAG,KAAKR,KAAL,CAAWS,kBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,EAOI;AAAQ,QAAA,OAAO,EAAE,KAAKT,KAAL,CAAWU,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKX,OADL,CARJ,CADJ;AAcH;;;;EA7CiBZ,S,GAgDtB;AACA;AAEA;AACA;;;AACA,IAAMwB,eAAe,GAAI,SAAnBA,eAAmB,CAACnB,KAAD,EAAW;AAChC,SAAO;AACHa,IAAAA,WAAW,EAAEb,KAAK,CAACoB,YADhB;AAEHX,IAAAA,aAAa,EAAET,KAAK,CAACO;AAFlB,GAAP;AAIH,CALD,C,CAOA;AACA;AACA;;;AACA,IAAMc,kBAAkB,GAAI,SAAtBA,kBAAsB,CAAEC,QAAF,EAAe;AACvC,SAAO;AACHR,IAAAA,kBAAkB,EAAE;AAAA,aAAMQ,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,WAAR;AAAsBC,QAAAA,OAAO,EAAE;AAC9DpB,UAAAA,KAAK,EAAG;AADsD;AAA/B,OAAD,CAAd;AAAA,KADjB;AAIHY,IAAAA,YAAY,EAAE;AAAA,aAAMM,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,KAAR;AAAgBC,QAAAA,OAAO,EAAE;AAClDpB,UAAAA,KAAK,EAAG;AAD0C;AAAzB,OAAD,CAAd;AAAA,KAJX;AAOHW,IAAAA,kBAAkB,EAAE;AAAA,aAAMO,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,WAAR;AAAsBC,QAAAA,OAAO,EAAE;AAC9DpB,UAAAA,KAAK,EAAG,CAAC;AADqD;AAA/B,OAAD,CAAd;AAAA,KAPjB;AAUHa,IAAAA,kBAAkB,EAAE;AAAA,aAAMK,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,WAAR;AAAsBC,QAAAA,OAAO,EAAE;AAC9DpB,UAAAA,KAAK,EAAG,CAAC;AADqD;AAA/B,OAAD,CAAd;AAAA,KAVjB;AAaHc,IAAAA,cAAc,EAAE;AAAA,aAAMI,QAAQ,CAAE;AAC5BC,QAAAA,IAAI,EAAE;AADsB,OAAF,CAAd;AAAA,KAbb;AAgBHX,IAAAA,eAAe,EAAE,yBAAEa,KAAF;AAAA,aAAaH,QAAQ,CAAE;AACpCC,QAAAA,IAAI,EAAE,eAD8B;AAEpCC,QAAAA,OAAO,EAAE;AACLC,UAAAA,KAAK,EAAGA;AADH;AAF2B,OAAF,CAArB;AAAA;AAhBd,GAAP;AAuBH,CAxBD;;AA2BA,eAAe3B,OAAO,CAACqB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CtB,OAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport CounterControl from '../../components/CounterControl/CounterControl';\nimport CounterOutput from '../../components/CounterOutput/CounterOutput';\n\n\n// Redux\nimport { connect} from 'react-redux';\n\nclass Counter extends Component {\n    state = {\n        counter: 0\n    }\n\n    counterChangedHandler = ( action, value ) => {\n        switch ( action ) {\n            case 'inc':\n                this.setState( ( prevState ) => { return { counter: prevState.counter + 1 } } )\n                break;\n            case 'dec':\n                this.setState( ( prevState ) => { return { counter: prevState.counter - 1 } } )\n                break;\n            case 'add':\n                this.setState( ( prevState ) => { return { counter: prevState.counter + value } } )\n                break;\n            case 'sub':\n                this.setState( ( prevState ) => { return { counter: prevState.counter - value } } )\n                break;\n                default:\n                break;\n        }\n    }\n\n    render () {\n        const results = (\n            this.props.storedResults.map( item => {\n                return (<li key={item} onClick={this.props.onDeleteResults(item)}>{item}</li>)\n            })                        \n        );\n\n        return (\n            <div>\n                <CounterOutput value={this.props.compCounter} />\n                <CounterControl label=\"Increment\" clicked={ this.props.onIncrementCounter} />\n                <CounterControl label=\"Decrement\" clicked={this.props.onDecrementCounter}  />\n                <CounterControl label=\"Add 5\" clicked={ this.props.onAddCounter}  />\n                <CounterControl label=\"Subtract 5\" clicked={ this.props.onSubstractCounter}  />\n                <hr />\n                <button onClick={this.props.onStoreResults}>Store Result</button>\n                <ul>\n                    {results}\n                </ul>\n            </div>\n        );\n    }\n}\n\n// map to store instructions about how the state managed by redux should be mapped to props you\n// can see the container. The state is the state we set up previously in the reducer.\n\n// It expects the state input and returns a JS object which is a map of prop names and slices of the \n// state stored. It's our way of configuring which kind of information we need.\nconst mapStateToProps =  (state) => {\n    return {\n        compCounter: state.counterRedux ,\n        storedResults: state.results\n    };\n}\n\n// Which kind of actions do I want to dispatch in thise container.\n//  It returns prop names referencing to a function which should eventually get executed to a dispatch\n// an action.\nconst mapDispatchToProps =  ( dispatch) => {\n    return {\n        onIncrementCounter: () => dispatch({ type: 'INCREMENT' , payLoad: {\n            value : 1\n        }}) ,\n        onAddCounter: () => dispatch({ type: 'ADD' , payLoad: {\n            value : 5\n        }}) ,\n        onDecrementCounter: () => dispatch({ type: 'DECREMENT' , payLoad: {\n            value : -1\n        }}),\n        onSubstractCounter: () => dispatch({ type: 'SUBSTRACT' , payLoad: {\n            value : -5\n        }}) ,\n        onStoreResults: () => dispatch ({\n            type: 'STORE_RESULT'\n        }) ,\n        onDeleteResults: ( index ) => dispatch ({\n            type: 'DELETE_RESULT' ,\n            payLoad: {\n                index : index\n            }\n        }) \n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter)"]},"metadata":{},"sourceType":"module"}