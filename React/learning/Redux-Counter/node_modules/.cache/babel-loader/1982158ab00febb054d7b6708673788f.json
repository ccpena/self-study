{"ast":null,"code":"import _toConsumableArray from \"/mnt/data/repositories/github/self-study/React/learning/Redux-Counter/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/mnt/data/repositories/github/self-study/React/learning/Redux-Counter/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar initialState = {\n  counterRedux: 0,\n  results: []\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(\"Current State\", state);\n  console.log(action.type, action.payLoad);\n\n  switch (action.type) {\n    case 'INCREMENT':\n    case 'SUBSTRACT':\n    case 'DECREMENT':\n    case 'ADD':\n      return _objectSpread({}, state, {\n        counterRedux: state.counterRedux + action.payLoad.value\n      });\n\n    case 'STORE_RESULT':\n      var newResults = _toConsumableArray(state.results).concat([state.counterRedux]);\n\n      console.log('New Results', newResults);\n      return _objectSpread({}, state, {\n        results: newResults\n      });\n\n    case 'DELETE_RESULT':\n      var myArray = _toConsumableArray(state.results);\n\n      var index = action.payLoad.index;\n      myArray.splice(index, 1);\n      return _objectSpread({}, state, {\n        results: myArray\n      });\n\n    default:\n      break;\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/mnt/data/repositories/github/self-study/React/learning/Redux-Counter/src/store/reducer.js"],"names":["initialState","counterRedux","results","reducer","state","action","console","log","type","payLoad","value","newResults","myArray","index","splice"],"mappings":";;AAAA,IAAMA,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAG,CADE;AAEjBC,EAAAA,OAAO,EAAE;AAFQ,CAArB;;AAOA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAmC;AAAA,MAAlCC,KAAkC,uEAA1BJ,YAA0B;AAAA,MAAXK,MAAW;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,KAA7B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB,EAAyBH,MAAM,CAACI,OAAhC;;AACA,UAAQJ,MAAM,CAACG,IAAf;AACI,SAAK,WAAL;AACA,SAAK,WAAL;AACA,SAAK,WAAL;AACA,SAAK,KAAL;AACI,+BACOJ,KADP;AAEIH,QAAAA,YAAY,EAAEG,KAAK,CAACH,YAAN,GAAqBI,MAAM,CAACI,OAAP,CAAeC;AAFtD;;AAIJ,SAAK,cAAL;AACI,UAAMC,UAAU,sBAAOP,KAAK,CAACF,OAAb,UAAuBE,KAAK,CAACH,YAA7B,EAAhB;;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BI,UAA3B;AACA,+BACOP,KADP;AAEIF,QAAAA,OAAO,EAAES;AAFb;;AAIJ,SAAK,eAAL;AACI,UAAMC,OAAO,sBAAQR,KAAK,CAACF,OAAd,CAAb;;AACA,UAAMW,KAAK,GAAGR,MAAM,CAACI,OAAP,CAAeI,KAA7B;AACAD,MAAAA,OAAO,CAACE,MAAR,CAAeD,KAAf,EAAsB,CAAtB;AACA,+BACOT,KADP;AAEIF,QAAAA,OAAO,EAAEU;AAFb;;AAIJ;AACI;AAzBR;;AA2BA,SAAOR,KAAP;AACH,CA/BD;;AAkCA,eAAeD,OAAf","sourcesContent":["const initialState = {\n    counterRedux : 0  ,\n    results: []\n}\n\n\n\nconst reducer = (state = initialState , action) => {\n    console.log(\"Current State\", state);\n    console.log(action.type, action.payLoad);\n    switch (action.type) {        \n        case 'INCREMENT': \n        case 'SUBSTRACT':\n        case 'DECREMENT':\n        case 'ADD':              \n            return {\n                ...state , \n                counterRedux: state.counterRedux + action.payLoad.value\n            }\n        case 'STORE_RESULT':\n            const newResults = [...state.results , state.counterRedux];  \n            console.log('New Results', newResults)          ;\n            return {\n                ...state,\n                results: newResults\n            }    \n        case 'DELETE_RESULT':            \n            const myArray =  [...state.results];\n            const index = action.payLoad.index;\n            myArray.splice(index, 1);\n            return {\n                ...state ,\n                results: myArray\n            };\n        default:\n            break;\n    }    \n    return state;\n}\n\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}